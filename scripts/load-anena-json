#! /usr/bin/env python3

####################################################################################################

####################################################################################################
#
# Avalanche - 
# Copyright (C) 2021 Fabrice Salvaire
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
####################################################################################################

from enum import Enum
from pathlib import Path
from pprint import pprint

from Avalanche.Data import Accidents, Accident
from Avalanche.Data import DataType
from Avalanche.Statistics.Histogram import EnumHistogram

####################################################################################################

path = Path('data').joinpath('anena-accidents.json')
accidents = Accidents.load_json(path)

histograms = {}
for attribute, type_ in Accident.ATTRIBUTE_TYPES.items():
    if issubclass(type_, Enum):
        histograms[attribute] = EnumHistogram(type_)

for accident in accidents:
    # print()
    for attribute, histogram in histograms.items():
        histogram.fill(getattr(accident, attribute))

for attribute, histogram in histograms.items():
    print("="*100)
    print(attribute)
    print(histogram)
